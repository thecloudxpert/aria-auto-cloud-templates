sudo firewall-cmd --zone=public --add-port=2376/tcp
sudo firewall-cmd --zone=public --add-port=80/tcp
sudo firewall-cmd --zone=public --add-port=443/tcp
sudo firewall-cmd --zone=public --add-port=4243/tcp
sudo firewall-cmd --get-zone-of-interface=docker0
sudo firewall-cmd --permanent --zone=trusted --add-interface=docker0
sudo nmcli connection modify docker0 connection.zone public
sudo firewall-cmd --reload
sudo systemctl restart docker




mkdir /etc/systemd/system/docker.service.d/
sudo echo "[Service]" >> /etc/systemd/system/docker.service.d/override.conf
sudo echo "ExecStart=" >> /etc/systemd/system/docker.service.d/override.conf
sudo echo "ExecStart=/usr/bin/dockerd -H=fd:// -H=tcp://0.0.0.0:4243 --containerd=/run/containerd/containerd.sock" >> /etc/systemd/system/docker.service.d/override.conf

usermod -aG docker ${input.username}
su - ${input.username}

sudo timedatectl set-timezone UTC
sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
sed -i "s/#MaxSessions 10/MaxSessions 50/g" /etc/ssh/sshd_config
service sshd reload
yum install -y https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm
yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
yum update -y
yum install docker-ce docker-ce-cli -y
sed -i "s/ExecStart=\/usr\/bin\/dockerd -H fd:\/\/ --containerd=\/run\/containerd\/containerd.sock/ExecStart=\/usr\/bin\/dockerd -H fd:\/\/ -H tcp:\/\/0.0.0.0:2375 --containerd=\/run\/containerd\/containerd.sock/g" /lib/systemd/system/docker.service
systemctl daemon-reload
systemctl restart docker.service
firewall-cmd --zone=public --add-masquerade --permanent
firewall-cmd --zone=public --add-port=2375/tcp
firewall-cmd --zone=public --add-port=80/tcp
firewall-cmd --zone=public --add-port=443/tcp
firewall-cmd --permanent --zone=trusted --add-interface=docker0
firewall-cmd --reload



export VSPHEREVCENTER='${var.PKR_VSPHEREVCENTER}'
export VSPHEREUSER='${var.PKR_VSPHEREUSER}'
export VSPHEREPASS='${var.PKR_VSPHEREPASS}'
export VSPHEREDATACENTER='${var.PKR_VSPHEREDATACENTER}'
export VSPHERECLUSTER='${var.PKR_VSPHERECLUSTER}'
export VSPHEREDATASTORE='${var.PKR_VSPHEREDATASTORE}'
export VSPHERENETWORK='${var.PKR_VSPHERENETWORK}'
export VSPHEREISODS='${var.PKR_VSPHEREISODS}'
export LINUXUSER='${var.PKR_LINUX_USER}'
export LINUXPASS='${var.PKR_LINUX_PASSWORD}'
export WINDOWSPASS='${var.PKR_WINDOWS_PASSWORD}'
export BUILDVERSION='${Initialize.Git Clone.output.exports.BUILDVERSION}'
export BUILDREPO='${input.git_repo}'
export BUILDBRANCH='${input.git_branch}'
export HTTPSERVER='http://$HTTPIP/${executionIndex}'

r Data: Variable PKR_WIN2019STD_LICENSE not in current list of variables.
Initialize.Replace Placeholder Data: Variable PKR_WIN2016STD_LICENSE not in current list of variables.
Initialize.Replace Placeholder Data: Variable PKR_WINDOWS_PASSWORD not in current list of variables.
Initialize.Replace Placeholder Data: Variable PKR_ANSIBLE_USER not in current list of variables.
Initialize.Replace Placeholder Data: Variable PKR_ANSIBLE_KEY not in current list of variables.
Initialize.Create Variables: Variable PKR_WINDOWS_PASSWORD not in current list of variables. 