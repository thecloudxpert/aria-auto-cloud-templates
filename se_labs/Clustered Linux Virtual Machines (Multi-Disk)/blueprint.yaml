title: Linux Virtual Machines (Clustered, Multi-Disk)
version: 1.0
formatVersion: 1
inputs:
  size:
    type: string
    title: Virtual Machine Size
    enum:
      - small
      - medium
      - large
    default: small
    description: |
      <strong>VM Size Information:</strong>
      <ul>
        <li> small = 1vCPU, 1GB </li>
        <li> medium = 2vCPU, 4GB </li>
        <li> large = 4vCPU, 8GB </li>
      </ul>
  image:
    type: string
    title: Operating System
    enum:
      - linux-ubuntu-server-22.04
      - linux-ubuntu-server-24.04
      - linux-ubuntu-server-25.04
    default: linux-ubuntu-server-22.04
  username:
    type: string
    default: admin
  password:
    type: string
    default: VMw@re1!
    encrypted: true
  diskInfo:
    type: array
    title: Add Additional Disks
    minItems: 0
    maxItems: 5
    items:
      type: object
      properties:
        controller:
          type: string
          title: SCSI Controller
          enum:
            - SCSI_Controller_0
            - SCSI_Controller_1
            - SCSI_Controller_2
            - SCSI_Controller_3
          default: SCSI_Controller_0
        unit:
          type: integer
          title: Disk Order
          maximum: 4
          minimum: 1
        size:
          type: number
          title: Size GB
          default: 5
          maximum: 200
        drive:
          type: string
          title: Mountpoint/Drive Letter
        label:
          type: string
          title: Disk Label
  vmCount:
    type: integer
    title: Number of VMs
    minimum: 1
    maximum: 3
    default: 1
  naming:
    type: object
    title: Server Information
    $ref: /ref/property-groups/naming
resources:
  machine:
    type: Cloud.vSphere.Machine
    allocatePerInstance: true
    properties:
      count: ${input.vmCount}
      image: ${input.image}
      flavor: ${input.size}
      name: ${input.naming.location}${input.naming.environment}${input.naming.role}      
      constraints:
        - tag: ${"env:" + input.naming.environment}
      attachedDisks: ${map_to_object(slice(resource.disk[*].id, length(input.diskInfo) * count.index, length(input.diskInfo) * (count.index +1)), "source")}
      networks:
        - network: ${resource.network.id}
          assignIPv6Address: false
          assignment: static
      cloudConfig: |
        #cloud-config
        hostname: ${self.resourceName}
        fqdn: ${resource.machine.resourceName}.${propgroup.defaultServerValues.domain}
        timezone: ${propgroup.defaultServerValues.timezone}
        disable_root: true
        ssh_pwauth: true
        users:
          - name: vmware
            lock_passwd: false
            groups: ['sudo', 'users', 'admin']
            shell: /bin/bash
            sudo: ALL=(ALL) NOPASSWD:ALL
            passwd: $6$pCNgiQprrT/EmeE5$zuE5ZtTJfoLXr5BK34SuaH4FSDAIgRykN5xq89lF0VTw8kMErBhPdaDsvHwsLH/3E3K0jIjG7ob17pZXKdhw70
        runcmd:
          - echo 'cloud-init is done!' >> /tmp/finished.txt
        power_state:
          delay: now
          mode: reboot
          message: Rebooting the OS
          condition: if [ -e /var/run/reboot-required ]; then exit 0; else exit 1; fi       
  disk:
    type: Cloud.vSphere.Disk
    allocatePerInstance: true
    properties:
      persistent: false
      count: ${input.vmCount * length(input.diskInfo)}
      capacityGb: ${input.diskInfo[count.index % length(input.diskInfo)].size}
      name: ${input.diskInfo[count.index % length(input.diskInfo)].label}
      SCSIController: ${input.diskInfo[count.index % length(input.diskInfo)].controller}
      unitNumber: ${to_string(input.diskInfo[count.index % length(input.diskInfo)].unit)}
      drive: ${to_string(input.diskInfo[count.index % length(input.diskInfo)].drive)}
      label: ${to_string(input.diskInfo[count.index % length(input.diskInfo)].label)}
  network:
    type: Cloud.NSX.Network
    properties:
      networkType: existing
      constraints:
        - tag: ${"env:" + input.naming.environment}
